<?xml version="1.0" encoding="UTF-8"?>
<project name="MyProject" default="dist" basedir=".">
	<!-- set global properties for this build -->
	<property name="src" location="WebContent" />
	<property name="libs" location="WebContent/libs" />
	<property name="build" location="build" />
	<property name="dist" location="dist" />
	<property name="test-dist" location="test-dist" />
	<property name="filename-min" value="wisi-min.js" />
	<property name="wisi-init" value="wisi-init.js" />
	<property name="jquery-filename" value="jquery-1.5.1.min.js" />
	<property name="VERSION" value="0.9D" />
	<property name="mock_include" value="&lt;script type=&quot;text/javascript&quot; src=&quot;js/jquery.mockjax.js&quot; /&gt; &lt;/script&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;js/ajax.mocks.js&quot;&gt; &lt;/script&gt; " />
	<property name="files_list" value="libs/webtoolkit.md5.js,
		libs/jquery.ba-bbq.js, 
		libs/jquery.form.js, 
		libs/jquery.validate.password.js, 
		js/wisi.js, 
		${build}/config.js, 
		js/utilities/logger.js, 
		js/utilities/utilities.js, 
		js/utilities/ui.informationbar.js, 
		js/utilities/temperatureDrawer.js, 
		js/utilities/ajax.js, 
		js/jquery.validate.individualsettings.js, 
		js/utilities/error-handling.js, 
		js/valuesToLanguageMapping.js, 
		js/view/ui.js, 
		js/modules/modulelist/modulelistupdater.js, 
		js/view/uiAnimations.js, 
		js/language_file_general.js, 
		js/modules/alarm/alarm.js, 
		js/utilities/uiApplicationFlowUtilities.js, 
		js/data/module.js, 
		js/data/initData.js, 
		js/modules/types/transmodulator/pidappends.js, 
		js/modules/types/transmodulator/pidfilters.js, 
		js/modules/types/transmodulator/output.js, 
		js/modules/types/transmodulator.js, 
		js/modules/types/oh50.js, 
		js/modules/types/oh51.js, 
		js/modules/oh51.ajax.js, 
		js/modules/types/oh85h.js, 
		js/modules/types/oh85.js, 
		js/modules/types/transmodulator/oh88h.js, 
		js/utilities/ui.messageBox.js, 
		js/widgets/services.widget.js, 
		js/modules/modulefactory.js, 
		js/modules/types/transmodulator/input_sat.js, 
		js/modules/types/transmodulator/input.js, 
		js/modules/types/transmodulator/signal_type.js, 
		js/modules/types/transmodulator/output_channel.js, 
		js/modules/types/transmodulator/output_cable.js, 
		js/modules/types/transmodulator/output_terrestrial.js, 
		js/modules/types/transmodulator/services.js,
		js/modules/types/receiver/digital_receiver.js,
		js/modules/types/receiver/input_sat.js,
		js/modules/types/receiver/output.js,
		js/modules/types/receiver/border.js,
		js/modules/types/receiver/service.js,
		js/modules/types/receiver/subtitle.js,
		js/modules/types/receiver/language.js,
		js/modules/types/receiver/oh77.js,
		js/modules/types/receiver/oh76.js" />
	
	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}" />
	</target>
	<target name="compile" depends="init, minificationDist" description="compile the source">
		<!-- Compile the javaScript code from ${src} into ${build} -->

	</target>
	<target name="dist" depends="compile" description="generate the distribution">
		<mkdir dir="${dist}" />
		<mkdir dir="${dist}/js" />
		<mkdir dir="${dist}/css" />
		
		<copy file="${build}/${filename-min}" tofile="${dist}/js/${filename-min}" />
		<copy file="${libs}/${jquery-filename}" tofile="${dist}/js/${jquery-filename}" />
		<copy file="${libs}/jquery.validate.min.js" tofile="${dist}/js/jquery.validate.min.js" />
		<copy file="${libs}/jquery.tmpl.min.js" tofile="${dist}/js/jquery.tmpl.min.js" />
		<copy file="${libs}/jquery.datalink.js" tofile="${dist}/js/jquery.datalink.js" />
		<copy file="${libs}/underscore-min.js" tofile="${dist}/js/underscore-min.js" />
		<copy file="${src}/js/init.js" tofile="${dist}/js/${wisi-init}" />
		
		
		<copy todir="${dist}/css">
		    <fileset dir="${build}" excludes="**/*.js" />
		  </copy>


		<copy todir="${dist}/errorPages">
			<fileset dir="${src}/errorPages" />
		</copy>

		<copy todir="${dist}/images">
			<fileset dir="${src}/images" />
		</copy>

		<copy file="${src}/index.html" tofile="${dist}/index.html">
			<filterset>
				<filter token="WISI-MIN" value="${filename-min}" />
				<filter token="WISI-INIT" value="${wisi-init}" />
				<filter token="FCGI_URL" value="/fcgi/main_service.fcgi" />
				<filter token="WEBINTERFACE_VERSION" value="${VERSION}" />
				<filter token="JQUERY_FILENAME" value="${jquery-filename}" />
				<filter token="MOCK_INCLUDE" value="" />
			</filterset>
		</copy>

		<copy file="${src}/login.html" tofile="${dist}/login.html">
			<filterset>
				<filter token="WISI-MIN" value="${filename-min}" />
				<filter token="JQUERY_FILENAME" value="${jquery-filename}" />
			</filterset>
		</copy>
		<copy file="${src}/favicon.ico" tofile="${dist}/favicon.ico" />
	</target>

	<target name="test-dist" depends="init, js.concatenateTest" description="generate the test distribution">
		<mkdir dir="${test-dist}" />
		<mkdir dir="${test-dist}/js" />
		<copy file="${build}/${filename-min}" tofile="${test-dist}/js/${filename-min}" />
		<copy file="${libs}/${jquery-filename}" tofile="${test-dist}/js/${jquery-filename}" />
		<copy file="${libs}/jquery.validate.min.js" tofile="${test-dist}/js/jquery.validate.min.js" />
		<copy file="${libs}/jquery.tmpl.min.js" tofile="${test-dist}/js/jquery.tmpl.min.js" />
		<copy file="${libs}/jquery.datalink.js" tofile="${test-dist}/js/jquery.datalink.js" />
		<copy file="${libs}/underscore-min.js" tofile="${test-dist}/js/underscore-min.js" />
		<copy file="${src}/js/init.js" tofile="${test-dist}/js/${wisi-init}" />
		<copy file="${libs}/jquery.mockjax.js" tofile="${test-dist}/js/jquery.mockjax.js" />
		<copy file="${src}/js/ajax.mocks.js" tofile="${test-dist}/js/ajax.mocks.js" />

		<copy todir="${test-dist}/css">
			<fileset dir="${src}/css" />
		</copy>

		<copy todir="${test-dist}/errorPages">
			<fileset dir="${src}/errorPages" />
		</copy>

		<copy todir="${test-dist}/images">
			<fileset dir="${src}/images" />
		</copy>

		<copy todir="${test-dist}/jsonTestFiles">
			<fileset dir="${src}/jsonTestFiles" />
		</copy>
		<copy todir="${test-dist}/tests">
			<fileset dir="${src}/tests" />
		</copy>

		<copy file="${src}/index.html" tofile="${test-dist}/index.html">
			<filterset>
				<filter token="WISI-MIN" value="${filename-min}" />
				<filter token="WISI-INIT" value="${wisi-init}" />
				<filter token="FCGI_URL" value="/fcgi/main_service.fcgi" />
				<filter token="WEBINTERFACE_VERSION" value="${VERSION}" />
				<filter token="JQUERY_FILENAME" value="${jquery-filename}" />
				<filter token="MOCK_INCLUDE" value="${mock_include}" />
			</filterset>
		</copy>

		<copy file="${src}/login.html" tofile="${test-dist}/login.html">
			<filterset>
				<filter token="WISI-MIN" value="${filename-min}" />
				<filter token="JQUERY_FILENAME" value="${jquery-filename}" />
			</filterset>
		</copy>
		<copy file="${src}/favicon.ico" tofile="${test-dist}/favicon.ico" />

	</target>
	<target name="clean" description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}" />
		<delete dir="${dist}" />
		<delete dir="${test-dist}" />
	</target>

	<target name="jsConfigPreparationDist">
		<copy file="${src}/js/config.js" tofile="${build}/config.js">
			<filterset>
				<filter token="ENABLED" value="disable" />
				<filter token="DEVICE_URL" value="/fcgi/main_service.fcgi?resource=modulelist" />
				<filter token="ALARM_URL" value="/fcgi/main_service.fcgi?resource=alarm" />
				<filter token="OH51_URL" value="/fcgi/main_service.fcgi?resource=OH51&amp;rack=1&amp;slot=14" />
			</filterset>
		</copy>
	</target>
	<target name="jsConfigPreparationDistTest">
		<copy file="${src}/js/config.js" tofile="${build}/config.js">
			<filterset>
				<filter token="ENABLED" value="enabled" />
				<filter token="DEVICE_URL" value="/fcgi/main_service.fcgi?resource=modulelist" />
				<filter token="ALARM_URL" value="/fcgi/main_service.fcgi?resource=alarm" />
				<filter token="OH51_URL" value="/fcgi/main_service.fcgi?resource=OH51&amp;rack=1&amp;slot=14" />
			</filterset>
		</copy>
	</target>
	<target name="js.concatenateDist" depends="jsConfigPreparationDist">
		<concat destfile="${build}/concatenated.js" fixlastline="yes">
			<filelist dir="${src}/" files="${files_list}"/>
		</concat>
	</target>
	<target name="js.concatenateTest" depends="jsConfigPreparationDistTest">
		<concat destfile="${build}/wisi-min.js" fixlastline="yes">
			<filelist dir="${src}/" files="${files_list}" />
		</concat>
	</target>
	<target name="minificationDist" depends="js.concatenateDist">
		<java jar="tools/yuicompressor-2.4.2.jar" failonerror="true" fork="true" output="${build}/${filename-min}">
			<arg value="${build}/concatenated.js" />
		</java>
		<java jar="tools/yuicompressor-2.4.2.jar" failonerror="true" fork="true" output="${build}/${wisi-init}">
			<arg value="${src}/js/init.js" />
		</java>
		<java jar="tools/yuicompressor-2.4.2.jar" failonerror="true" fork="true" output="${build}/base.css">
			<arg value="${src}/css/base.css" />
		</java>
		<java jar="tools/yuicompressor-2.4.2.jar" failonerror="true" fork="true" output="${build}/fonts.css">
			<arg value="${src}/css/fonts.css" />
		</java>
		<java jar="tools/yuicompressor-2.4.2.jar" failonerror="true" fork="true" output="${build}/password_meter.css">
			<arg value="${src}/css/password_meter.css" />
		</java>
		<java jar="tools/yuicompressor-2.4.2.jar" failonerror="true" fork="true" output="${build}/scrollTable.css">
			<arg value="${src}/css/scrollTable.css" />
		</java>
	</target>
</project>